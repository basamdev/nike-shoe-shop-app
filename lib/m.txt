import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
//import 'login_page.dart';  // Import LoginPage
//import 'sign_up_page.dart';  // Import SignUpPage
//import 'firebase_options.dart'; // Auto-generated by FlutterFire CLI
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';



void main() async  {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    //options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const MobileShopApp());
}

class MobileShopApp extends StatelessWidget {
  const MobileShopApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Mobile Shop',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: const LoginSignUpPage(),
    );
  }
}




























// Page 2: Main Page
class MainPage extends StatelessWidget {
  final List<Map<String, dynamic>> phones = [
    {
      'name': 'Galaxy S24 Ultra',
      'price': 1199,
      'image': "assets/galaxy_s24_ultra.jpeg",
      'details': '''
      - Release Date: Q1 2024
      - Display: Dynamic AMOLED 2X
      - Screen Size: 6.8 inches
      - RAM: 12GB
      - Processor: Snapdragon 8 Gen 3
      - Battery: 5000mAh
      - Storage: 256GB/1TB
      - Price: \$1,199
      '''
    },
    {
      'name': 'iPhone 15 Pro Max',
      'price': 1199,
      'image': 'assets/iphone_15_pro_max.jpeg',
      'details': '''
      - Release Date: September 2023
      - Display: Super Retina XDR OLED
      - Screen Size: 6.7 inches
      - RAM: 8GB
      - Processor: A17 Pro
      - Battery: 4323mAh
      - Storage: 256GB/1TB
      - Price: \$1,199
      '''
    },


    // Galaxy Phones (Android)
    {
      'name': 'Galaxy S24+',
      'price': 999,
      'image': 'assets/galaxy_s24_plus.jpeg',
      'details': '''
        - Release Date: Q1 2024
        - Display: Dynamic AMOLED 2X
        - Screen Size: 6.7 inches
        - RAM: 8GB
        - Processor: Snapdragon 8 Gen 3
        - Battery: 4700mAh
        - Storage: 256GB
        - Price: \$999
      '''
    },

    {
      'name': 'Galaxy Z Flip5',
      'price': 999,
      'image': 'assets/galaxy_z_flip5.jpeg',
      'details': '''
        - Release Date: August 2023
        - Display: AMOLED (Main & Cover)
        - Screen Size: 6.7 inches
        - RAM: 8GB
        - Processor: Snapdragon 8 Gen 2
        - Battery: 3700mAh
        - Storage: 256GB/512GB
        - Price: \$999
      '''
    },
    {
      'name': 'Galaxy A54 5G',
      'price': 450,
      'image': 'assets/galaxy_a54_5g.jpeg',
      'details': '''
        - Release Date: March 2023
        - Display: Super AMOLED
        - Screen Size: 6.4 inches
        - RAM: 6GB/8GB
        - Processor: Exynos 1380
        - Battery: 5000mAh
        - Storage: 128GB/256GB
        - Price: \$450
      '''
    },

    // iPhones (iOS)
    {
      'name': 'iPhone 15 Pro',
      'price': 999,
      'image': 'assets/iphone_15_pro.jpeg',
      'details': '''
        - Release Date: September 2023
        - Display: Super Retina XDR OLED
        - Screen Size: 6.1 inches
        - RAM: 8GB
        - Processor: A17 Pro
        - Battery: 3279mAh
        - Storage: 256GB/1TB
        - Price: \$999
      '''
    },
    {
      'name': 'iPhone 15 Plus',
      'price': 899,
      'image': 'assets/iphone_15_plus.jpeg',
      'details': '''
        - Release Date: September 2023
        - Display: Super Retina XDR OLED
        - Screen Size: 6.7 inches
        - RAM: 6GB
        - Processor: A16 Bionic
        - Battery: 4383mAh
        - Storage: 128GB/512GB
        - Price: \$899
      '''
    },
    {
      'name': 'iPhone 15',
      'price': 799,
      'image': 'assets/iphone_15.jpeg',
      'details': '''
        - Release Date: September 2023
        - Display: Super Retina XDR OLED
        - Screen Size: 6.1 inches
        - RAM: 6GB
        - Processor: A16 Bionic
        - Battery: 3279mAh
        - Storage: 128GB/512GB
        - Price: \$799
      '''
    },
    {
      'name': 'iPhone SE (2024)',
      'price': 429,
      'image': 'assets/iphone_se_2024.jpeg',
      'details': '''
        - Release Date: Rumored for 2024
        - Display: Retina HD
        - Screen Size: 4.7 inches
        - RAM: 4GB
        - Processor: A15 Bionic
        - Battery: 2018mAh
        - Storage: 64GB/256GB
        - Price: \$429
      '''
    },
  ];

   MainPage({super.key});


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Mobile Shop'),
        centerTitle: true,
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(10),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 2,
          crossAxisSpacing: 10,
          mainAxisSpacing: 10,
          childAspectRatio: 0.8,
        ),
        itemCount: phones.length,
        itemBuilder: (context, index) {
          return Card(
            elevation: 4,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(10),
            ),
            child: Column(
              children: [
                Image.asset(
                  phones[index]['image']!,
                  height: 120,
                  width: 120,
                  fit: BoxFit.cover,
                ),
                const SizedBox(height: 10),
                Text(
                  phones[index]['name']!,
                  style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
                  textAlign: TextAlign.center,
                ),
                const SizedBox(height: 5),
                Text(
                  '\$${phones[index]['price']}',
                  style: const TextStyle(color: Colors.blue, fontSize: 14),
                ),
                const Spacer(),
                ElevatedButton(
                  onPressed: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => BuyPage(
                          phoneName: phones[index]['name']!,
                          price: phones[index]['price']!,
                          details: phones[index]['details']!,
                        ),
                      ),
                    );
                  },
                  child: const Text('Buy Now'),
                ),
              ],
            ),
          );
        },
      ),
    );
  }
}

// Page 3: Buy Page



class BuyPage extends StatefulWidget {
  final String phoneName;
  final int price;
  final String details;

  const BuyPage({super.key,
    required this.phoneName,
    required this.price,
    required this.details,
  });

  @override
  _BuyPageState createState() => _BuyPageState();
}

class _BuyPageState extends State<BuyPage> {
  int quantity = 1;

  @override
  Widget build(BuildContext context) {
    int totalPrice = widget.price * quantity;

    return Scaffold(
      appBar: AppBar(
        title: Text('Buy ${widget.phoneName}'),
      ),
      body: Stack(
        children: [
          Padding(
            padding: const EdgeInsets.all(20.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const Text(
                  'Product Details:',
                  style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                ),
                const SizedBox(height: 10),
                Text(
                  widget.details,
                  style: const TextStyle(fontSize: 14, color: Colors.black87),
                ),
                const SizedBox(height: 20),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    const Text(
                      'Select Quantity:',
                      style: TextStyle(fontSize: 16),
                    ),
                    Row(
                      children: [
                        IconButton(
                          onPressed: () {
                            setState(() {
                              if (quantity > 1) quantity--;
                            });
                          },
                          icon: const Icon(Icons.remove_circle_outline),
                        ),
                        Text(
                          '$quantity',
                          style: const TextStyle(fontSize: 16),
                        ),
                        IconButton(
                          onPressed: () {
                            setState(() {
                              quantity++;
                            });
                          },
                          icon: const Icon(Icons.add_circle_outline),
                        ),
                      ],
                    ),
                  ],
                ),
                const SizedBox(height: 20),
                Text(
                  'Total Price: \$$totalPrice',
                  style: const TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Colors.green,
                  ),
                ),
                const SizedBox(height: 30),
                const Text(
                  'Choose Payment Method:',
                  style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                ),
                const SizedBox(height: 10),
                Wrap(
                  spacing: 10,
                  runSpacing: 10,
                  children: [
                    PaymentButton(
                      icon: Icons.credit_card,
                      label: 'MasterCard',
                      onPressed: () {
                        showPurchaseComplete(context, 'MasterCard');
                      },
                    ),
                    PaymentButton(
                      icon: Icons.account_balance_wallet,
                      label: 'PayPal',
                      onPressed: () {
                        showPurchaseComplete(context, 'PayPal');
                      },
                    ),
                    PaymentButton(
                      icon: Icons.phone_android,
                      label: 'FastPay',
                      onPressed: () {
                        showPurchaseComplete(context, 'FastPay');
                      },
                    ),
                    PaymentButton(
                      icon: Icons.money,
                      label: 'Other',
                      onPressed: () {
                        showPurchaseComplete(context, 'Other');
                      },
                    ),
                  ],
                ),
              ],
            ),
          ),
          // Logo in the top-right corner
          Positioned(
            top: 10,
            right: 10,
            child: Image.asset(
              'assets/logo.jpeg',
              height: 50,
              width: 50,
            ),
          ),
        ],
      ),
    );
  }

  void showPurchaseComplete(BuildContext context, String method) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('Purchase Complete'),
        content: Text(
            'You have successfully paid \$${widget.price * quantity} using $method.'),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('OK'),
          ),
        ],
      ),
    );
  }
}

class PaymentButton extends StatelessWidget {
  final IconData icon;
  final String label;
  final VoidCallback onPressed;

  const PaymentButton({super.key, required this.icon, required this.label, required this.onPressed});

  @override
  Widget build(BuildContext context) {
    return ElevatedButton.icon(
      onPressed: onPressed,
      icon: Icon(icon, size: 20),
      label: Text(label),
      style: ElevatedButton.styleFrom(
        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 10),
      ),
    );
  }
}


































































import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
//import 'login_page.dart';  // Import LoginPage
//import 'sign_up_page.dart';  // Import SignUpPage
//import 'firebase_options.dart'; // Auto-generated by FlutterFire CLI
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';



void main() async  {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    //options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const MobileShopApp());
}

class MobileShopApp extends StatelessWidget {
  const MobileShopApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Mobile Shop',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: const LoginSignUpPage(),
    );
  }
}









//nwe=================================
class LoginSignUpPage extends StatelessWidget {
  const LoginSignUpPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Welcome to Mobile Shop')),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Image.asset(
              'assets/logo.jpeg',
              height: 100,
              width: 100,
            ),
            const SizedBox(height: 30),
            ElevatedButton(
              onPressed: () {
                Navigator.push(context,
                    MaterialPageRoute(builder: (_) => const LoginPage()));
              },
              child: const Text('Login'),
            ),
            const SizedBox(height: 10),
            TextButton(
              onPressed: () {
                Navigator.push(context,
                    MaterialPageRoute(builder: (_) => const SignUpPage()));
              },
              child: const Text("Don't have an account? Sign Up"),
            ),
          ],
        ),
      ),
    );
  }
}


//nwe===================================
class LoginPage extends StatefulWidget {
  const LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final emailController = TextEditingController();
  final passwordController = TextEditingController();
  String errorMessage = '';

  Future<void> loginUser() async {
    try {
      await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: emailController.text.trim(),
        password: passwordController.text.trim(),
      );
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (_) => MainPage()),
      );
    } catch (e) {
      setState(() {
        errorMessage = 'Login failed: ${e.toString()}';
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Login')),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          children: [
            TextField(
              controller: emailController,
              decoration:
              const InputDecoration(labelText: 'Email', hintText: 'Enter your email'),
            ),
            TextField(
              controller: passwordController,
              obscureText: true,
              decoration:
              const InputDecoration(labelText: 'Password', hintText: 'Enter your password'),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: loginUser,
              child: const Text('Login'),
            ),
            if (errorMessage.isNotEmpty)
              Padding(
                padding: const EdgeInsets.only(top: 10),
                child: Text(errorMessage, style: const TextStyle(color: Colors.red)),
              ),
          ],
        ),
      ),
    );
  }
}




class SignUpPage extends StatefulWidget {
  const SignUpPage({super.key});

  @override
  State<SignUpPage> createState() => _SignUpPageState();
}

class _SignUpPageState extends State<SignUpPage> {
  final emailController = TextEditingController();
  final passwordController = TextEditingController();
  String errorMessage = '';

  Future<void> signUpUser() async {
    try {
      await FirebaseAuth.instance.createUserWithEmailAndPassword(
        email: emailController.text.trim(),
        password: passwordController.text.trim(),
      );
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (_) => const LoginPage()),
      );
    } catch (e) {
      setState(() {
        errorMessage = 'Sign Up failed: ${e.toString()}';
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Sign Up')),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          children: [
            TextField(
              controller: emailController,
              decoration:
              const InputDecoration(labelText: 'Email', hintText: 'Enter your email'),
            ),
            TextField(
              controller: passwordController,
              obscureText: true,
              decoration:
              const InputDecoration(labelText: 'Password', hintText: 'Enter your password'),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: signUpUser,
              child: const Text('Sign Up'),
            ),
            if (errorMessage.isNotEmpty)
              Padding(
                padding: const EdgeInsets.only(top: 10),
                child: Text(errorMessage, style: const TextStyle(color: Colors.red)),
              ),
          ],
        ),
      ),
    );
  }
}


















































































// Page 2: Main Page
class MainPage extends StatelessWidget {
  final List<Map<String, dynamic>> phones = [
    {
      'name': 'Galaxy S24 Ultra',
      'price': 1199,
      'image': "assets/galaxy_s24_ultra.jpeg",
      'details': '''
      - Release Date: Q1 2024
      - Display: Dynamic AMOLED 2X
      - Screen Size: 6.8 inches
      - RAM: 12GB
      - Processor: Snapdragon 8 Gen 3
      - Battery: 5000mAh
      - Storage: 256GB/1TB
      - Price: \$1,199
      '''
    },
    {
      'name': 'iPhone 15 Pro Max',
      'price': 1199,
      'image': 'assets/iphone_15_pro_max.jpeg',
      'details': '''
      - Release Date: September 2023
      - Display: Super Retina XDR OLED
      - Screen Size: 6.7 inches
      - RAM: 8GB
      - Processor: A17 Pro
      - Battery: 4323mAh
      - Storage: 256GB/1TB
      - Price: \$1,199
      '''
    },


    // Galaxy Phones (Android)
    {
      'name': 'Galaxy S24+',
      'price': 999,
      'image': 'assets/galaxy_s24_plus.jpeg',
      'details': '''
        - Release Date: Q1 2024
        - Display: Dynamic AMOLED 2X
        - Screen Size: 6.7 inches
        - RAM: 8GB
        - Processor: Snapdragon 8 Gen 3
        - Battery: 4700mAh
        - Storage: 256GB
        - Price: \$999
      '''
    },

    {
      'name': 'Galaxy Z Flip5',
      'price': 999,
      'image': 'assets/galaxy_z_flip5.jpeg',
      'details': '''
        - Release Date: August 2023
        - Display: AMOLED (Main & Cover)
        - Screen Size: 6.7 inches
        - RAM: 8GB
        - Processor: Snapdragon 8 Gen 2
        - Battery: 3700mAh
        - Storage: 256GB/512GB
        - Price: \$999
      '''
    },
    {
      'name': 'Galaxy A54 5G',
      'price': 450,
      'image': 'assets/galaxy_a54_5g.jpeg',
      'details': '''
        - Release Date: March 2023
        - Display: Super AMOLED
        - Screen Size: 6.4 inches
        - RAM: 6GB/8GB
        - Processor: Exynos 1380
        - Battery: 5000mAh
        - Storage: 128GB/256GB
        - Price: \$450
      '''
    },

    // iPhones (iOS)
    {
      'name': 'iPhone 15 Pro',
      'price': 999,
      'image': 'assets/iphone_15_pro.jpeg',
      'details': '''
        - Release Date: September 2023
        - Display: Super Retina XDR OLED
        - Screen Size: 6.1 inches
        - RAM: 8GB
        - Processor: A17 Pro
        - Battery: 3279mAh
        - Storage: 256GB/1TB
        - Price: \$999
      '''
    },
    {
      'name': 'iPhone 15 Plus',
      'price': 899,
      'image': 'assets/iphone_15_plus.jpeg',
      'details': '''
        - Release Date: September 2023
        - Display: Super Retina XDR OLED
        - Screen Size: 6.7 inches
        - RAM: 6GB
        - Processor: A16 Bionic
        - Battery: 4383mAh
        - Storage: 128GB/512GB
        - Price: \$899
      '''
    },
    {
      'name': 'iPhone 15',
      'price': 799,
      'image': 'assets/iphone_15.jpeg',
      'details': '''
        - Release Date: September 2023
        - Display: Super Retina XDR OLED
        - Screen Size: 6.1 inches
        - RAM: 6GB
        - Processor: A16 Bionic
        - Battery: 3279mAh
        - Storage: 128GB/512GB
        - Price: \$799
      '''
    },
    {
      'name': 'iPhone SE (2024)',
      'price': 429,
      'image': 'assets/iphone_se_2024.jpeg',
      'details': '''
        - Release Date: Rumored for 2024
        - Display: Retina HD
        - Screen Size: 4.7 inches
        - RAM: 4GB
        - Processor: A15 Bionic
        - Battery: 2018mAh
        - Storage: 64GB/256GB
        - Price: \$429
      '''
    },
  ];

   MainPage({super.key});


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Mobile Shop'),
        centerTitle: true,
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(10),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 2,
          crossAxisSpacing: 10,
          mainAxisSpacing: 10,
          childAspectRatio: 0.8,
        ),
        itemCount: phones.length,
        itemBuilder: (context, index) {
          return Card(
            elevation: 4,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(10),
            ),
            child: Column(
              children: [
                Image.asset(
                  phones[index]['image']!,
                  height: 120,
                  width: 120,
                  fit: BoxFit.cover,
                ),
                const SizedBox(height: 10),
                Text(
                  phones[index]['name']!,
                  style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
                  textAlign: TextAlign.center,
                ),
                const SizedBox(height: 5),
                Text(
                  '\$${phones[index]['price']}',
                  style: const TextStyle(color: Colors.blue, fontSize: 14),
                ),
                const Spacer(),
                ElevatedButton(
                  onPressed: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => BuyPage(
                          phoneName: phones[index]['name']!,
                          price: phones[index]['price']!,
                          details: phones[index]['details']!,
                        ),
                      ),
                    );
                  },
                  child: const Text('Buy Now'),
                ),
              ],
            ),
          );
        },
      ),
    );
  }
}

// Page 3: Buy Page



class BuyPage extends StatefulWidget {
  final String phoneName;
  final int price;
  final String details;

  const BuyPage({super.key,
    required this.phoneName,
    required this.price,
    required this.details,
  });

  @override
  _BuyPageState createState() => _BuyPageState();
}

class _BuyPageState extends State<BuyPage> {
  int quantity = 1;

  @override
  Widget build(BuildContext context) {
    int totalPrice = widget.price * quantity;

    return Scaffold(
      appBar: AppBar(
        title: Text('Buy ${widget.phoneName}'),
      ),
      body: Stack(
        children: [
          Padding(
            padding: const EdgeInsets.all(20.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const Text(
                  'Product Details:',
                  style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                ),
                const SizedBox(height: 10),
                Text(
                  widget.details,
                  style: const TextStyle(fontSize: 14, color: Colors.black87),
                ),
                const SizedBox(height: 20),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    const Text(
                      'Select Quantity:',
                      style: TextStyle(fontSize: 16),
                    ),
                    Row(
                      children: [
                        IconButton(
                          onPressed: () {
                            setState(() {
                              if (quantity > 1) quantity--;
                            });
                          },
                          icon: const Icon(Icons.remove_circle_outline),
                        ),
                        Text(
                          '$quantity',
                          style: const TextStyle(fontSize: 16),
                        ),
                        IconButton(
                          onPressed: () {
                            setState(() {
                              quantity++;
                            });
                          },
                          icon: const Icon(Icons.add_circle_outline),
                        ),
                      ],
                    ),
                  ],
                ),
                const SizedBox(height: 20),
                Text(
                  'Total Price: \$$totalPrice',
                  style: const TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Colors.green,
                  ),
                ),
                const SizedBox(height: 30),
                const Text(
                  'Choose Payment Method:',
                  style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                ),
                const SizedBox(height: 10),
                Wrap(
                  spacing: 10,
                  runSpacing: 10,
                  children: [
                    PaymentButton(
                      icon: Icons.credit_card,
                      label: 'MasterCard',
                      onPressed: () {
                        showPurchaseComplete(context, 'MasterCard');
                      },
                    ),
                    PaymentButton(
                      icon: Icons.account_balance_wallet,
                      label: 'PayPal',
                      onPressed: () {
                        showPurchaseComplete(context, 'PayPal');
                      },
                    ),
                    PaymentButton(
                      icon: Icons.phone_android,
                      label: 'FastPay',
                      onPressed: () {
                        showPurchaseComplete(context, 'FastPay');
                      },
                    ),
                    PaymentButton(
                      icon: Icons.money,
                      label: 'Other',
                      onPressed: () {
                        showPurchaseComplete(context, 'Other');
                      },
                    ),
                  ],
                ),
              ],
            ),
          ),
          // Logo in the top-right corner
          Positioned(
            top: 10,
            right: 10,
            child: Image.asset(
              'assets/logo.jpeg',
              height: 50,
              width: 50,
            ),
          ),
        ],
      ),
    );
  }

  void showPurchaseComplete(BuildContext context, String method) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('Purchase Complete'),
        content: Text(
            'You have successfully paid \$${widget.price * quantity} using $method.'),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('OK'),
          ),
        ],
      ),
    );
  }
}

class PaymentButton extends StatelessWidget {
  final IconData icon;
  final String label;
  final VoidCallback onPressed;

  const PaymentButton({super.key, required this.icon, required this.label, required this.onPressed});

  @override
  Widget build(BuildContext context) {
    return ElevatedButton.icon(
      onPressed: onPressed,
      icon: Icon(icon, size: 20),
      label: Text(label),
      style: ElevatedButton.styleFrom(
        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 10),
      ),
    );
  }
}
